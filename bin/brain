#!/usr/bin/env ruby
# encoding: UTF-8
require 'bundler/setup'
Bundler.require :default, :proxy

$:.unshift File.join File.dirname(__FILE__), '../lib'
require 'brain'
require 'minefold'
require 'prism/back'

STDOUT.sync = true
EM.epoll

Bugsnag.configure do |config|
  config.api_key = ENV['BUGSNAG']
  config.release_stage = Brain.env
  config.project_root = Brain.root
  config.notify_release_stages = ['production', 'staging']
  config.use_ssl = true
end

module Prism
  EM.run do
    EM.error_handler do |e|
      Exceptional.handle(e)
      raise e
    end

    # Pinkies.collect do |pinkies|
    #   allocator = Allocator.new(pinkies)
    #   start_options = allocator.start_options_for_new_world(4)
    #   p start_options
    # end

    subscription = PrismRedis.connect
    subscription.psubscribe "worlds:*"
    subscription.psubscribe "workers:*"
    subscription.on :pmessage do |key, channel, message|
      Prism::Messaging.deliver_message channel, message
    end

    [ PlayerConnectionRequest,
      ServerEvent,
      PlayerWorldRequest,
      WorkerStopRequest,
      WorkerCreateRequest,
      WorldStartRequest,
      WorldMoveRequest ].each do |klass|
        QueueProcessor.new klass
    end

    puts "Started. #{Fold.env} mode"

  end
end
